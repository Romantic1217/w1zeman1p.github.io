{
  "name": "frameless",
  "version": "0.0.6",
  "description": "a tiny framework to write command line programs",
  "main": "lib/frameless.js",
  "scripts": {
    "test": "./node_modules/cli-easy/node_modules/vows/bin/vows --spec test/*-test.js"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:dscape/frameless.git"
  },
  "keywords": [
    "cli",
    "framework",
    "commands",
    "programs",
    "command line",
    "command line interface",
    "command line program"
  ],
  "author": {
    "name": "nuno job",
    "email": "nunojobpinto@gmail.com",
    "url": "http://nunojob.com"
  },
  "license": "apache 2.0",
  "dependencies": {
    "optimist": "~0.6.0",
    "prompt": "~0.2.9",
    "colors": "~0.6.0",
    "eyes": "~0.1.8",
    "async": "~0.2.9",
    "keypress": "~0.2.1"
  },
  "devDependencies": {
    "cli-easy": "~0.1.x",
    "nano": "~3.3.6"
  },
  "readme": "# frameless\n\n## introduction\n\n[“frameless”](https://github.com/dscape/frameless) is a framework to write command line programs. “frameless” allows you to write command line programs that are easy to read, and fun to write.\n\nthus, “frameless” is two things: (1) a set of decisions focused around how commands should work; and (2) a node.js module that demonstrates those decisions\n\nthe main design goal behind “frameless” is to allow you to migrate your day-to-day scripts to the command line with minimal effort\n\n“frameless” is designed with hackers in mind so all the internals are deliberately exported. this allows fellow developers to tailor behavior if they disagree with the decisions made by the maintainers of the “frameless” itself, as well as perform necessary customization in style and security\n\nthe best way to get a feel for “frameless” is to simply look at an node.js program that uses the framework. for example, you can check the [usage examples](https://github.com/dscape/frameless/tree/master/usage) listed in the project’s repository\n\n“frameless” is free software, available under the apache open source license (v2). see the [license](https://raw.github.com/dscape/frameless/master/license.md) for more information\n\n## basics\n\n### options\n\ncommands are expected to respond consistently to options such as `version`, `yes`, `raw`, `verbose`, `help`, `setup`. “frameless” will perform all these operations and behave according to the [principle of least astonishment](http://en.wikipedia.org/wiki/Principle_of_least_astonishment). these default options are defined in `frameless.reserved_options` and pretty print styles that correspond to these options can be overriden\n\n``` javascript\nvar frameless = require('frameless');\n\n// assuming placement in `bin/` folder\nframeless.version = require('../package').version;\n\nframeless(function (opts) {\n  frameless.ok(frameless.reserved_options);\n});\n```\n\n### prompt\n\n“frameless” will prompt the end user for options that were not provided at run time. i.e. if you run “frameless” without specifying `--name alice` in the following script “frameless” will prompt you for the name\n\n``` javascript\nframeless('name', function (input) {\n  frameless.info('hello ' + input.name);\n});\n```\n\n“frameless” prompt is built on top of the [flatiron/prompt](https://github.com/flatiron/prompt) module. all the arguments to the main function (except the callback) are assumed to be either a string (i.e. a mandatory option) or an object that represents a [flatiron/prompt option object](https://github.com/flatiron/prompt#prompting-with-validation-default-values-and-more-complex-properties). “frameless” adds two new properties to the flatiron/prompt object: (1) `save`; to control whether or not that specific option should be persisted in the dot file, and (2) `load`; which serves the purpose of automatically loading files specified in options\n\n“frameless” supports “are you sure?” prompts\n\n``` javascript\nframeless.confirm(true);\n```\n\nthis behavior can be overridden by the end user by using the `-y` or `--yes` option\n\n## persisting options across different runs\n\n“frameless” enables programs to save and reuse the options specified in a run by exposing `frameless.save`. calling this function will make frameless automatically record the options inputed in a dot file located in your home directory\n\n``` javascript\nframeless.save(true);\n\nframeless('name', 'password', function (opts) {\n  frameless.info(frameless.dotfile, 'dotfile');\n  frameless.info(frameless.sensitive_options,  'sensitive');\n});\n```\n\nspecial considerations are taken for saving sensitive options such as passwords and api keys. “frameless” will attempt to encrypt these options. “frameless” ships with a default encryption key but fellow developers are encouraged to use a different key in their own programs. “frameless” will automatically attempt to read the `~/.ssh/id_rsa` private key and use it as an encryption key whenever possible\n\n“frameless” allows you to select which options should be saved. the default is to save the option once you called the `frameless.save` method\n\n``` javascript\nframeless.save(true);\n\nframeless('name',\n  { name: 'password', required: true, save: false}, function (opts) {\n  frameless.info(frameless.dotfile, 'dotfile');\n  frameless.info(frameless.sensitive_options,  'sensitive');\n});\n```\n\nconfiguring your command line program can later be done by the end user by changing the dot file directly or running your command while specifying the `--setup` option\n\n## license\n\ncopyright 2011 nuno job <nunojob.com> (oO)--',--\n\nlicensed under the apache license, version 2.0 (the \"license\");\nyou may not use this file except in compliance with the license.\nyou may obtain a copy of the license at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nunless required by applicable law or agreed to in writing, software\ndistributed under the license is distributed on an \"as is\" basis,\nwithout warranties or conditions of any kind, either express or implied.\nsee the license for the specific language governing permissions and\nlimitations under the license.\n",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/dscape/frameless/issues"
  },
  "_id": "frameless@0.0.6",
  "dist": {
    "shasum": "ad398af8a97ca505c32ac719c741d8888912857b",
    "tarball": "http://registry.npmjs.org/frameless/-/frameless-0.0.6.tgz"
  },
  "_from": "frameless@0.0.6",
  "_npmVersion": "1.2.32",
  "_npmUser": {
    "name": "dscape",
    "email": "nunojobpinto@gmail.com"
  },
  "maintainers": [
    {
      "name": "dscape",
      "email": "nunojobpinto@gmail.com"
    },
    {
      "name": "julianduque",
      "email": "julianduquej@gmail.com"
    },
    {
      "name": "indexzero",
      "email": "charlie.robbins@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "ad398af8a97ca505c32ac719c741d8888912857b",
  "_resolved": "https://registry.npmjs.org/frameless/-/frameless-0.0.6.tgz"
}
